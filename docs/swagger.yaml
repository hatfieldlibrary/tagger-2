swagger: "2.0"
info:
  version: "2.1.0"
  title: Tagger
  description: >
  
    The *Tagger* REST API is designed to provide information about digital collections and items. Clients can be simple (like a list of hyperlinked collection and item titles) or complex (like the clearinghouse that provides descriptions, related items, publisher information and links).
    
    
    This documentation describes only the public API. Administrative functions in the *Tagger* application have their own API that is documented elsewhere. 


host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
  
paths:
  /rest/collection:
    # binds a127 app logic to a route
    x-swagger-router-controller: allCollections
    get:
      description: Returns list of all collections and items.
      # used as the method name of the controller
      operationId: allCollections
      responses:
        "200":
          description: Success
          schema:
            type: array
            # a pointer to a definition
            items:
              $ref: "#/definitions/Collection"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /rest/collection/area/{id}:
    # binds a127 app logic to a route
    x-swagger-router-controller: collectionsByArea
    get:
      description: Returns list of all collections in an area.
      # used as the method name of the controller
      operationId: collectionsByArea
      parameters:
        - name: id
          in: path
          description: The id of the area.
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            # a pointer to a definition
            items:
              $ref: "#/definitions/Collection"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /rest/collection/subject/{id}:
    # binds a127 app logic to a route
    x-swagger-router-controller: collectionsBySubject
    get:
      description: Returns list of all collections by subject.
      operationId: collectionsBySubject
      parameters:
        - name: id
          in: path
          description: The id of the subject.
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            # a pointer to a definition
            items:
              $ref: "#/definitions/Collection"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /rest/collection/subject/{id}/area/{areaId}:
    # binds a127 app logic to a route
    x-swagger-router-controller: collectionsBySubjectArea
    get:
      description: Returns list of all collections in an area by subject.
      operationId: collectionsBySubjectArea
      parameters:
        - name: id
          in: path
          description: The id of the subject.
          required: true
          type: string
        - name: areaId
          in: path
          description: The id of the area.
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            # a pointer to a definition
            items:
              $ref: "#/definitions/Collection"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
              
  /rest/collection/category/{id}:
    # binds a127 app logic to a route
    x-swagger-router-controller: collectionsByCategory
    get:
      description: Returns list of all collections by category. Category usually refers to the real home of the collection or item. It is more specific that a collection area.  For example, the category might be an actual collection in the real world, like a musuem's collection of modern art.  In this example, the collection area could be defined as art collections in general.
      operationId: collectionsByCategory
      parameters:
        - name: id
          in: path
          description: The id of the category.
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            # a pointer to a definition
            items:
              $ref: "#/definitions/Collection"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /rest/collection/id/{id}:
    # binds a127 app logic to a route
    x-swagger-router-controller: collectionById
    get:
      description: Returns collection with the provided id.
      # used as the method name of the controller
      operationId: collectionById
      parameters:
        - name: id
          in: path
          description: The id of the collection
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SingleCollection"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /rest/subject:
    # binds a127 app logic to a route
    x-swagger-router-controller: subjectList
    
    get:
      description: Returns list of all subject tags.
      # used as the method name of the controller
      operationId: subjectList
      responses:
        "200":
          description: Success
          schema:
            type: array
            # a pointer to a definition
            items:
              $ref: "#/definitions/Tag"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /rest/subject/collection/{id}:
    x-swagger-router-controller: subjectsForCollection
    get:
      description: Returns list of subjects for a given collection id.
      operationId: subjectsForCollection
      parameters:
        - name: id
          in: path
          description: The id of the collection.
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Tag"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /rest/subject/area/{id}:
    x-swagger-router-controller: areaSubject
    get:
      description: Returns list of subjects for a given area id.
      operationId: areaSubject
      parameters:
        - name: id
          in: path
          description: The id of the area.
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Tag"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /rest/type/collection/{id}:
    x-swagger-router-controller: typesForCollection
    get:
      description: Returns list of item types for a given collection id.
      operationId: typesForCollection
      parameters:
        - name: id
          in: path
          description: The id of the collection.
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/ItemType"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /rest/area:
    x-swagger-router-controller: areaList
    get:
      description: Returns list of all areas.
      operationId: areaList
      responses:
        "200":
          description: Success
          schema:
            type: array
            items: 
              $ref: "#/definitions/Area"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /rest/area/id/{id}:
    x-swagger-router-controller: areaById
    get:
      description: Returns the area by id.
      operationId: areaById
      parameters:
        - name: id
          in: path
          description: The id of the area
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
              $ref: "#/definitions/Area"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /rest/area/collection:
    x-swagger-router-controller: listAreasWithCount
    get:
      description: Returns area list with collection counts.
      operationId: listAreasWithCount
      responses:
        "200":
          description: Success
          schema:
            type: array
            # a pointer to a definition
            items:
              $ref: "#/definitions/AreaCount"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /rest/options/external/{collection}:
    x-swagger-router-controller: external
    get:
      description: Returns a list of items. In our current configuration, this is a list of titles and counts. The service communicates with a target host to retrieve the list. That means structure and meaning are entirely contextual and the service provides no guarantees about the data returned. This endpoint is subject to change.
      operationId: external 
      parameters:
        - name: collection
          in: path
          description: The name of a collection.
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/ExternalList"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw
    
# complex objects have schema definitions
definitions:
  SingleCollection:
    type: object
    required: 
      - collection
      - category
      - items
    properties:
      collection:
        $ref: '#/definitions/Collection'
      category: 
        $ref: '#/definitions/Category'
      items: 
        type: array
        items:
          $ref: '#/definitions/ItemType'
  Collection:
    required:
      - id
      - title
    properties:
      id:
        type: integer
      title:
        type: string
      url:
        type: string
      image:
        type: string
      desc:
        type: string
      dates:
        type: string
      items:
        type: string
      linkOptions:
        type: string
      searchOptions:
        type: string
      assetType:
        type: string
      restricted:
        type: boolean
      published:
        type: boolean
  ItemType:
    required:
      - id
      - name
    properties:
      id: 
        type: integer
      name:
        type: string
      icon: 
        type: string
  Category:
    required: 
      - id
      - title
    properties:
      id:
        type: integer
      title: 
        type: string
      url:
        type: string
      secondaryUrl:
        type: string
      desc:
        type: string
      linkLabel:
        type: string
  Area:
    required:
      - id
      - title
    properties:
      id:
        type: integer
      title: 
        type: string
      url: 
        type: string
      searchUrl:
        type: string
      desc:
        type: string
  AreaCount:
    required:
      - id
      - title
      - count
    properties:
      id:
        type: integer
      title: 
        type: string
      count:
        type: integer
  Tag:
    required:
      - id
      - name
    properties:
      id:
        type: integer
      name:
        type: string
      url:
        type: string
  ExternalList:
    required:
      - title
      - count
    properties:
      title:
        type: string
      count:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
